{"version":3,"sources":["utils/fetchClient.ts","types/ErrorType.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/ErrorMessage.tsx","types/FilterTypes.ts","components/TodoItem.tsx","components/TodoList.tsx","components/Footer.tsx","components/TodoField.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","ErrorTypes","client","getUserByEmail","email","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","FilterTypes","ErrorMessage","closeError","LOAD","ADD","LENGTH","DELETE","DELETEALL","UPDATE","hiden","onClick","TodoItem","todo","handleDeleteTodo","isEditing","setIsEditing","updateTodoOnServer","currTodo","setCurrTodo","newTodoTitle","setNewTodoTitle","deletindId","setDeletingId","newTodoField","useRef","current","focus","handleBlur","title","completed","defaultChecked","todoId","todoStatus","ref","onKeyDown","key","handleKeyEditing","onBlur","onDoubleClick","TodoList","todos","map","Footer","setFilterType","deleteTodos","todoNumber","filter","length","completedTodo","some","href","selected","all","active","style","visibility","TodoField","newTodo","isAdding","addNewTodo","setTodo","todoToAdd","handleChangeToggleAll","completedTodos","every","deleteTodo","String","updateTodo","App","setTodos","setError","filterType","setIsAdding","setTodoToAdd","useContext","filteredTodos","notCompletedTodos","useMemo","loadTodos","useCallback","userId","loadedTodos","isActiveToggleAll","idTodo","newAPITodo","currTodos","prev","item","handleDeleteAllTodos","currentTodos","handleFilterType","forEach","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02b806d8.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum ErrorTypes {\n  LOAD = 'load',\n  ADD = 'add',\n  LENGTH = 'length',\n  DELETE = 'delete',\n  DELETEALL = 'deleteAll',\n  UPDATE = 'update',\n}\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { ErrorTypes } from '../types/ErrorType';\n\ntype Props = {\n  error: ErrorTypes,\n  closeError: () => void,\n};\n\nexport const ErrorMessage: React.FC<Props> = ({ error, closeError }) => {\n  let errorMessage = '';\n\n  switch (error) {\n    case ErrorTypes.LOAD:\n      errorMessage = 'Unable to load todos';\n      break;\n\n    case ErrorTypes.ADD:\n      errorMessage = 'Unable to add a todo';\n      break;\n\n    case ErrorTypes.LENGTH:\n      errorMessage = 'Title can\\'t be empty';\n      break;\n\n    case ErrorTypes.DELETE:\n      errorMessage = 'Unable to delete a todo';\n      break;\n\n    case ErrorTypes.DELETEALL:\n      errorMessage = 'Unable to delete todos';\n      break;\n\n    case ErrorTypes.UPDATE:\n      errorMessage = 'Unable to update todo';\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className={classNames(\n        'notification', 'is-danger', 'is-light', 'has-text-weight-normal',\n        { hiden: error },\n      )}\n    >\n      <button\n        aria-label=\"HideErrorButton\"\n        data-cy=\"HideErrorButton\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={closeError}\n      />\n      {errorMessage}\n    </div>\n  );\n};\n","export enum FilterTypes {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  handleDeleteTodo: (todoId: number) => void,\n  isEditing: boolean,\n  setIsEditing: (value: boolean) => void,\n  updateTodoOnServer: (todoId: number, data: Partial<Todo>) => void,\n  currTodo: number,\n  setCurrTodo: (value: number) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  handleDeleteTodo,\n  isEditing,\n  setIsEditing,\n  updateTodoOnServer,\n  currTodo,\n  setCurrTodo,\n}) => {\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [deletindId, setDeletingId] = useState(0);\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, [currTodo]);\n\n  const handleRemoveTodo = () => {\n    setDeletingId(todo.id);\n    handleDeleteTodo(todo.id);\n  };\n\n  const handleChangeTodoStatus = (\n    todoId: number, todoStatus: boolean,\n  ) => {\n    updateTodoOnServer(todoId, { completed: todoStatus });\n  };\n\n  const handleEditing = (todoId: number) => {\n    setIsEditing(true);\n    setCurrTodo(todoId);\n    setNewTodoTitle(todo.title);\n  };\n\n  const handleBlur = () => {\n    if (todo.title === newTodoTitle) {\n      setIsEditing(false);\n    } else if (!newTodoTitle) {\n      handleDeleteTodo(todo.id);\n    } else {\n      updateTodoOnServer(todo.id, { title: newTodoTitle });\n      setIsEditing(false);\n    }\n  };\n\n  const handleKeyEditing = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      handleBlur();\n    }\n\n    if (event.key === 'Escape') {\n      setIsEditing(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n  };\n\n  const handleEdit = (event: React.KeyboardEvent) => {\n    handleKeyEditing(event);\n  };\n\n  const handleNewTodo = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTodoTitle(event.target.value);\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={classNames('todo', {\n        completed: todo.completed,\n      })}\n    >\n      <label\n        className=\"todo__status-label\"\n        htmlFor=\"status_handle\"\n      >\n        <input\n          id=\"status_handle\"\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          defaultChecked={todo.completed}\n          onClick={() => handleChangeTodoStatus(todo.id, !todo.completed)}\n        />\n      </label>\n\n      {isEditing && (currTodo === todo.id)\n        ? (\n          <form\n            onSubmit={handleSubmit}\n          >\n            <input\n              data-cy=\"TodoTitleField\"\n              type=\"text\"\n              className=\"todo__title-field\"\n              placeholder=\"Empty todo will be deleted\"\n              ref={newTodoField}\n              value={newTodoTitle}\n              onKeyDown={handleEdit}\n              onChange={handleNewTodo}\n              onBlur={handleBlur}\n            />\n          </form>\n        )\n        : (\n          <>\n            <span\n              data-cy=\"TodoTitle\"\n              className=\"todo__title\"\n              onDoubleClick={() => handleEditing(todo.id)}\n            >\n              {todo.title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"todo__remove\"\n              data-cy=\"TodoDeleteButton\"\n              onClick={handleRemoveTodo}\n            >\n              ×\n            </button>\n          </>\n        )}\n\n      <div\n        data-cy=\"TodoLoader\"\n        className={classNames('modal overlay', {\n          'is-active': todo.id === deletindId,\n        })}\n\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from './TodoItem';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleDeleteTodo: (todoId: number) => void,\n  isEditing: boolean,\n  setIsEditing: (value: boolean) => void,\n  updateTodoOnServer: (todoId: number, data: Partial<Todo>) => void,\n  currTodo: number,\n  setCurrTodo: (value: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleDeleteTodo,\n  isEditing,\n  setIsEditing,\n  updateTodoOnServer,\n  currTodo,\n  setCurrTodo,\n}) => {\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n          currTodo={currTodo}\n          setCurrTodo={setCurrTodo}\n          isEditing={isEditing}\n          setIsEditing={setIsEditing}\n          handleDeleteTodo={handleDeleteTodo}\n          updateTodoOnServer={updateTodoOnServer}\n        />\n      ))}\n    </section>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { FilterTypes } from '../types/FilterTypes';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setFilterType: (filterType: FilterTypes) => void,\n  deleteTodos: () => void,\n};\n\nexport const Footer: React.FC<Props> = ({\n  todos,\n  setFilterType,\n  deleteTodos,\n}) => {\n  const todoNumber = todos.filter(todo => !todo.completed).length;\n  const completedTodo = todos.some(todo => todo.completed);\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${todoNumber} items left`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          data-cy=\"FilterLinkAll\"\n          href=\"#/\"\n          className={classNames(\n            'filter__link', { selected: FilterTypes.all },\n          )}\n          onClick={() => setFilterType(FilterTypes.all)}\n        >\n          All\n        </a>\n\n        <a\n          data-cy=\"FilterLinkActive\"\n          href=\"#/active\"\n          className={classNames(\n            'filter__link', { selected: FilterTypes.active },\n          )}\n          onClick={() => setFilterType(FilterTypes.active)}\n        >\n          Active\n        </a>\n        <a\n          data-cy=\"FilterLinkCompleted\"\n          href=\"#/completed\"\n          className={classNames(\n            'filter__link', { selected: FilterTypes.completed },\n          )}\n          onClick={() => setFilterType(FilterTypes.completed)}\n        >\n          Completed\n        </a>\n      </nav>\n\n      <button\n        data-cy=\"ClearCompletedButton\"\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        style={{ visibility: completedTodo ? 'visible' : 'hidden' }}\n        onClick={deleteTodos}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","import React, { RefObject, useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  newTodo: RefObject<HTMLInputElement>,\n  isAdding: boolean,\n  addNewTodo: () => void,\n  setTodo: (value: string) => void,\n  todoToAdd: string,\n  handleChangeToggleAll: () => void,\n};\n\nexport const TodoField: React.FC<Props> = ({\n  todos,\n  newTodo,\n  isAdding,\n  addNewTodo,\n  setTodo,\n  todoToAdd,\n  handleChangeToggleAll,\n}) => {\n  const completedTodos = todos\n    .every((todo) => todo.completed === true);\n\n  useEffect(() => {\n    if (newTodo.current) {\n      newTodo.current.focus();\n    }\n  }, [isAdding]);\n\n  return (\n    <header className=\"todoapp__header\">\n      {(todos.length !== 0) && (\n        <button\n          aria-label=\"ToggleAllButton\"\n          data-cy=\"ToggleAllButton\"\n          type=\"button\"\n          className={classNames(\n            ('todoapp__toggle-all'),\n            { active: completedTodos },\n          )}\n          onClick={handleChangeToggleAll}\n        />\n      )}\n\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          addNewTodo();\n        }}\n      >\n        <input\n          data-cy=\"NewTodoField\"\n          disabled={isAdding}\n          type=\"text\"\n          ref={newTodo}\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={todoToAdd}\n          onChange={(event) => setTodo(event.target.value)}\n        />\n      </form>\n    </header>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = (title: string, userId: number) => {\n  const data = {\n    title,\n    userId,\n    completed: false,\n  };\n\n  return client.post<Todo>('/todos', data);\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${String(todoId)}`);\n};\n\nexport const updateTodo = (\n  todoId: number, data: Partial<Todo>,\n) => {\n  return client.patch<Todo>(`/todos/${todoId}`, data);\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useContext, useEffect, useRef, useState, useCallback, useMemo,\n} from 'react';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { ErrorMessage } from './components/ErrorMessage';\nimport { TodoList } from './components/TodoList';\nimport { FilterTypes } from './types/FilterTypes';\nimport { Footer } from './components/Footer';\nimport { TodoField } from './components/TodoField';\n\nimport {\n  getTodos,\n  addTodo,\n  deleteTodo,\n  updateTodo,\n} from './api/todos';\nimport { Todo } from './types/Todo';\nimport { ErrorTypes } from './types/ErrorType';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [error, setError] = useState<ErrorTypes | null>(null);\n  const [filterType, setFilterType] = useState<FilterTypes>(FilterTypes.all);\n  const [isAdding, setIsAdding] = useState(false);\n  const [todoToAdd, setTodoToAdd] = useState('');\n  const [currTodo, setCurrTodo] = useState(0);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const user = useContext(AuthContext);\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  const filteredTodos = todos.filter(todo => {\n    switch (filterType) {\n      case FilterTypes.active:\n        return !todo.completed;\n\n      case FilterTypes.completed:\n        return todo.completed;\n\n      default:\n        return true;\n    }\n  });\n\n  const todoNumber = (items: Todo[]) => items.filter(todo => !todo.completed);\n  const completedTodo = (items: Todo[]) => items.filter(todo => todo.completed);\n\n  const notCompletedTodos = useMemo(() => (\n    todoNumber(todos)\n  ), [todos, filterType]);\n\n  const completedTodos = useMemo(() => (\n    completedTodo(todos)\n  ), [todos, filterType]);\n\n  const loadTodos = useCallback(\n    async () => {\n      try {\n        const loadedTodos = await getTodos(user?.id || 0);\n\n        setTodos(loadedTodos);\n      } catch {\n        setError(ErrorTypes.LOAD);\n      }\n    }, [],\n  );\n\n  useEffect(() => {\n    if (error) {\n      setTimeout(() => setError(null), 3000);\n    }\n  }, [error]);\n\n  const isActiveToggleAll = completedTodos.length === todos.length;\n\n  const updateTodoOnServer = async (\n    idTodo: number, data: Partial<Todo>,\n  ) => {\n    try {\n      if (user?.id) {\n        await updateTodo(idTodo, data);\n      }\n    } catch {\n      setError(ErrorTypes.UPDATE);\n    } finally {\n      loadTodos();\n    }\n  };\n\n  const handleChangeToggleAll = () => {\n    const todosToHandle = isActiveToggleAll\n      ? [...completedTodos]\n      : [...notCompletedTodos];\n\n    todosToHandle.forEach(\n      todo => updateTodoOnServer(\n        todo.id, { completed: !isActiveToggleAll },\n      ),\n    );\n  };\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n\n    loadTodos();\n  }, []);\n\n  const addNewTodo = async () => {\n    setIsAdding(true);\n\n    if (!todoToAdd.length) {\n      setError(ErrorTypes.LENGTH);\n      setTimeout(() => setError(null), 3000);\n      setTodoToAdd('');\n      setIsAdding(false);\n\n      return;\n    }\n\n    if (user) {\n      try {\n        const newAPITodo = await addTodo(todoToAdd, user.id);\n\n        setTodos(currTodos => [...currTodos, newAPITodo]);\n      } catch {\n        setError(ErrorTypes.ADD);\n      }\n    }\n\n    setTodoToAdd('');\n    setIsAdding(false);\n  };\n\n  const handleDeleteTodo = useCallback(async (todoId: number) => {\n    if (user) {\n      try {\n        await deleteTodo(todoId);\n        setTodos(prev => (\n          prev.filter(item => item.id !== todoId)\n        ));\n      } catch {\n        setError(ErrorTypes.DELETE);\n      }\n    }\n  }, [user]);\n\n  const handleDeleteAllTodos = async () => {\n    try {\n      await Promise.all(todos.map(async (todo) => {\n        if (todo.completed) {\n          await deleteTodo(todo.id);\n        }\n\n        return todo;\n      }));\n\n      setTodos(currentTodos => currentTodos.filter(todo => !todo.completed));\n    } catch {\n      setError(ErrorTypes.DELETEALL);\n    }\n  };\n\n  const handleFilterType = useCallback((type: FilterTypes) => {\n    setFilterType(type);\n  }, []);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <TodoField\n          todos={todos}\n          newTodo={newTodoField}\n          isAdding={isAdding}\n          addNewTodo={() => addNewTodo()}\n          setTodo={setTodoToAdd}\n          todoToAdd={todoToAdd}\n          handleChangeToggleAll={handleChangeToggleAll}\n        />\n\n        {todos.length > 0 && (\n          <>\n            <TodoList\n              todos={filteredTodos}\n              handleDeleteTodo={handleDeleteTodo}\n              isEditing={isEditing}\n              setIsEditing={setIsEditing}\n              updateTodoOnServer={updateTodoOnServer}\n              currTodo={currTodo}\n              setCurrTodo={setCurrTodo}\n            />\n            <Footer\n              todos={todos}\n              setFilterType={handleFilterType}\n              deleteTodos={handleDeleteAllTodos}\n            />\n          </>\n        )}\n      </div>\n\n      {error && (\n        <ErrorMessage\n          error={error}\n          closeError={() => setError(null)}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}